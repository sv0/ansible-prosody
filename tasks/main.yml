---
- name: Debug ansible_os_family and ansible_distribution
  ansible.builtin.debug:
    msg: "Ansible runs on {{ ansible_os_family }}, {{ ansible_distribution }}."

# - name: Import assert tasks
#   ansible.builtin.import_tasks:
#     file: asserts.yml
#   tags:
#     - assert
#     - asserts

- name: Initialize distribution-specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"

# - name: Debug ansible_facts
#   ansible.builtin.debug:
#     var: ansible_facts
#     # e.g. ["ansible_service_mgr"] == "systemd"

- name: Add prosody GPG key and repository
  when:
    - ansible_distribution == 'Debian'
  block:
    - name: Add gpg key
      ansible.builtin.get_url:
        url: https://prosody.im/files/prosody-debian-packages.key
        dest: /etc/apt/trusted.gpg.d/prosody.gpg
        mode: 0644

    - name: Add specified repository into sources list using specified filename
      ansible.builtin.apt_repository:
        repo:
          "deb https://packages.prosody.im/debian \
           {{ ansible_distribution_release }} main"
        state: present
        filename: prosody

- name: Install prosody packages
  ansible.builtin.package:
    name: "{{ prosody_packages }}"
  notify:
    - Restart prosody

- name: Create systemd service file
  ansible.builtin.template:
    src: prosody.service.j2
    dest: /etc/systemd/system/prosody.service
    mode: 0644
    owner: root
    group: root
  notify:
    - Reload systemd
    - Restart prosody
  when:
    - ansible_service_mgr == "systemd"

- name: Configure Prosody
  ansible.builtin.template:
    src: prosody.cfg.lua.j2
    dest: /etc/prosody/prosody.cfg.lua
    owner: root
    group: "{{ prosody_group }}"
    mode: 0640
    backup: true
  notify:
    - Reload prosody config

# Add `install modules` task here
# prosodyctl install --server=https://modules.prosody.im/rocks/ mod_vcard_muc
# prosodyctl install --server=https://modules.prosody.im/rocks/ mod_cloud_notify
# mod_cloud_notify

- name: Include tasks from certificate.yml
  ansible.builtin.include_tasks:
    file: certificate.yml
    apply:
      tags:
        - certificate
        - cert
        - tls
  tags: always

- name: Create parameters for Diffieâ€“Hellman
  ansible.builtin.command:
    "openssl dhparam \
      -out /etc/prosody/certs/dh-{{ prosody_dhparam_length }}.pem \
       {{ prosody_dhparam_length }}"
  args:
    creates: /etc/prosody/certs/dh-{{ prosody_dhparam_length }}.pem
  notify: Restart prosody

- name: Flush handlers
  ansible.legacy.meta: flush_handlers

- name: Enable prosody systemd service
  ansible.builtin.systemd:
    name: prosody
    enabled: true
  when:
    - ansible_service_mgr == "systemd"

- name: Debug prosody_accounts variable
  ansible.builtin.debug:
    var: prosody_accounts
  tags:
    - user

- name: Create Prosody accounts
  #  set -o pipefail;
  ansible.builtin.shell:
    printf "%s\n%s\n" "{{ item.password }}" "{{ item.password }}"
    | prosodyctl adduser {{ item.username }}
  with_items: "{{ prosody_accounts }}"
  failed_when: false
  changed_when: false
  no_log: true
  tags:
    - user
    - account
  notify: Reload prosody config
