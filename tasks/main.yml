---
- name: Debug
  debug:
    var: ansible_facts  # e.g. ["ansible_service_mgr"] == "systemd"

- name: Add prosody GPG key and repository
  block:
    - name: Add gpg key
      get_url:
        url: https://prosody.im/files/prosody-debian-packages.key
        dest: /etc/apt/trusted.gpg.d/prosody.gpg

    - name: Add specified repository into sources list using specified filename
      ansible.builtin.apt_repository:
        repo:
          "deb https://packages.prosody.im/debian {{ ansible_distribution_release }} main"
        state: present
        filename: prosody
  # when:
  #   - ansible_distribution == 'Debian'
  #   - ansible_distribution_version | int >= 11

- name: Install prosody packages
  package:
    name: "{{ prosody_packages }}"
    # cache_valid_time: 3600
  notify:
    - restart prosody

- name: Copy systemd service file
  ansible.builtin.template:
    src: prosody.service.j2
    dest: /etc/systemd/system/prosody.service
    mode: 0644
    owner: root
    group: root
  notify:
    - Reload systemd
    - Restart prosody
  when:
    - ansible_service_mgr == "systemd"

- name: Configure Prosody
  ansible.builtin.template:
    src: prosody.cfg.lua.j2
    dest: /etc/prosody/prosody.cfg.lua
    owner: root
    group: prosody
    mode: 0640
  notify:
    - Reload systemd
    - Reload prosody config

- include_tasks: tls.yml
  with_items: "{{ prosody_virtual_hosts }}"
  tags:
    - cert

- name: Create parameters for Diffieâ€“Hellman
  command: "openssl dhparam -out /etc/prosody/certs/dh-{{ prosody_dhparam_length }}.pem {{ prosody_dhparam_length }}"
  args:
    creates: /etc/prosody/certs/dh-{{ prosody_dhparam_length }}.pem
  notify: Restart prosody

- name: Push proxy TLS cert to /etc/prosody/certs/
  copy:
    content: "{{ prosody_proxy_ssl_cert }}"
    dest: /etc/prosody/certs/proxy.pem
    owner: root
    group: prosody
    mode: 0640
  when: prosody_proxy_ssl_cert is defined
  tags:
    - cert
  notify: Reload prosody config

- name: Change ownership of generic key file if no custom is used
  file:
    path: /etc/prosody/certs/localhost.key
    owner: root
    group: prosody
    mode: 0640
  when: prosody_proxy_ssl_cert is undefined

- name: Push proxy TLS key to /etc/prosody/certs/
  copy:
    content: "{{ prosody_proxy_ssl_key }}"
    dest: /etc/prosody/certs/proxy.key
    owner: root
    group: prosody
    mode: 0640
  when: prosody_proxy_ssl_key is defined
  tags:
    - cert
  notify: Reload prosody config

- name: flush handlers
  meta: flush_handlers

- name: Enable prosody service
  systemd:
    name: prosody
    enabled: true

- name: debug prosody_accounts
  debug:
    var: prosody_accounts
  tags:
    - user

- name: Create Prosody accounts
  shell:
    printf "%s\n%s\n" "{{ item.password }}" "{{ item.password }}"
    | prosodyctl adduser {{ item.username }}
  with_items: "{{ prosody_accounts }}"
  failed_when: false
  tags:
    - user
